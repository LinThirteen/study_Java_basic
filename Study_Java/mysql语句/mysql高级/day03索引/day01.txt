

索引定义：
	排好序的快速查找数据结构：B树
	

	
优势：
	①类似大学图书馆建书目索引，提高数据检索的效率，降低数据库的IO成本
	②通过索引列对表进行排序，降低数据排序的成本，降低CPU的消耗	
	

	
劣势：
	①虽然索引大大提高了查询速度，同时却会降低更新表的速度，如符表进行insert
	，update和delete。
	②因为更新表时，mysql不仅要保持数据，还要保存一下索引文件每次更新了所以列的字段，
	都会调整因为更新所带来的键值变化的索引信息
	③索引只是提高效率的一个因素，如果你的mysql有大数据量的表，就需要花时间研究
	建立最优秀的索引，或者优化查询顺序
	
	
	
	
	
	
	


					①单值索引：即一个索引只包含单个列，一个表可以有多个单列索引
						
												
mysql索引分类     		② 唯一索引：索引列的值必须唯一，但允许空值 ： create unique index index_name on t_emp(name);
[]括号代表
可以省略				
					③复合索引：即一个索引包含多个列,性价比更高，因为如果是单值索引的话mysql会去选择最优。
				
					④基本索引
					
					
					基本语法：
					
					创建：create [unique]index indexName on mytable(columnname(length));	
						  alter mytable add [unique] index [indexName] on (columnname(length));
					
					
					删除：drop index [indexName] on mytable
					
					查看：show index from table_name;
					
					
					




mysql索引结构： 	
		
		Btree索引
		
		Hash索引
		
		full-test全文索引
		
		R-Tree索引
					
					
					
					
					


哪些情况下需要建索引：
			
			①主键自动建立唯一索引
			②频繁作为查询条件的字段应该创建索引:比如银行的身份证号，电信的电话号码
			③查询中与其他表关联的字段，外键关系建立索引
			④频繁更新的字段不适合创建索引，因为每次更新不单单更新了记录还会更新索引
			⑤where条件里用不到的字段不创建索引
			⑥单键/组合索引的选择问题，who?（在高并发下倾向创建组合索引）
			⑦查询中排序的字段，排序字段若通过索引去访问将大大提高排序速度
			⑧查询中统计或者分组字段		
					
					
					

哪些情况下不要建索引：	
			①表记录太少
			②经常增删改查的表
			
			③数据重复且分布平均的表字段，因此应该只为最经常查询个最经常排序的数据列建立索引
			注意，如果某个数据列包含许多重复的内容，为它建立索引的就没有太大的实际效果				
					
					
					
					
					
					
					
					
					
					
					
					
					
					